{"version":3,"file":"index.js","mappings":"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","sources":["webpack://three-bmfont-text/./node_modules/an-array/index.js","webpack://three-bmfont-text/./node_modules/as-number/index.js","webpack://three-bmfont-text/./node_modules/dtype/index.js","webpack://three-bmfont-text/./node_modules/is-buffer/index.js","webpack://three-bmfont-text/./node_modules/layout-bmfont-text/index.js","webpack://three-bmfont-text/./node_modules/quad-indices/index.js","webpack://three-bmfont-text/./node_modules/word-wrapper/index.js","webpack://three-bmfont-text/./node_modules/xtend/immutable.js","webpack://three-bmfont-text/webpack/bootstrap","webpack://three-bmfont-text/external var \"three\"","webpack://three-bmfont-text/./src/lib/createTextGeometry.js"],"sourcesContent":["var str = Object.prototype.toString\n\nmodule.exports = anArray\n\nfunction anArray(arr) {\n  return (\n       arr.BYTES_PER_ELEMENT\n    && str.call(arr.buffer) === '[object ArrayBuffer]'\n    || Array.isArray(arr)\n  )\n}\n","module.exports = function numtype(num, def) {\n\treturn typeof num === 'number'\n\t\t? num \n\t\t: (typeof def === 'number' ? def : 0)\n}","module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var wordWrap = require('word-wrapper')\nvar xtend = require('xtend')\nvar number = require('as-number')\n\nvar X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z']\nvar M_WIDTHS = ['m', 'w']\nvar CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n\n\nvar TAB_ID = '\\t'.charCodeAt(0)\nvar SPACE_ID = ' '.charCodeAt(0)\nvar ALIGN_LEFT = 0, \n    ALIGN_CENTER = 1, \n    ALIGN_RIGHT = 2\n\nmodule.exports = function createLayout(opt) {\n  return new TextLayout(opt)\n}\n\nfunction TextLayout(opt) {\n  this.glyphs = []\n  this._measure = this.computeMetrics.bind(this)\n  this.update(opt)\n}\n\nTextLayout.prototype.update = function(opt) {\n  opt = xtend({\n    measure: this._measure\n  }, opt)\n  this._opt = opt\n  this._opt.tabSize = number(this._opt.tabSize, 4)\n\n  if (!opt.font)\n    throw new Error('must provide a valid bitmap font')\n\n  var glyphs = this.glyphs\n  var text = opt.text||'' \n  var font = opt.font\n  this._setupSpaceGlyphs(font)\n  \n  var lines = wordWrap.lines(text, opt)\n  var minWidth = opt.width || 0\n\n  //clear glyphs\n  glyphs.length = 0\n\n  //get max line width\n  var maxLineWidth = lines.reduce(function(prev, line) {\n    return Math.max(prev, line.width, minWidth)\n  }, 0)\n\n  //the pen position\n  var x = 0\n  var y = 0\n  var lineHeight = number(opt.lineHeight, font.common.lineHeight)\n  var baseline = font.common.base\n  var descender = lineHeight-baseline\n  var letterSpacing = opt.letterSpacing || 0\n  var height = lineHeight * lines.length - descender\n  var align = getAlignType(this._opt.align)\n\n  //draw text along baseline\n  y -= height\n  \n  //the metrics for this text layout\n  this._width = maxLineWidth\n  this._height = height\n  this._descender = lineHeight - baseline\n  this._baseline = baseline\n  this._xHeight = getXHeight(font)\n  this._capHeight = getCapHeight(font)\n  this._lineHeight = lineHeight\n  this._ascender = lineHeight - descender - this._xHeight\n    \n  //layout each glyph\n  var self = this\n  lines.forEach(function(line, lineIndex) {\n    var start = line.start\n    var end = line.end\n    var lineWidth = line.width\n    var lastGlyph\n    \n    //for each glyph in that line...\n    for (var i=start; i<end; i++) {\n      var id = text.charCodeAt(i)\n      var glyph = self.getGlyph(font, id)\n      if (glyph) {\n        if (lastGlyph) \n          x += getKerning(font, lastGlyph.id, glyph.id)\n\n        var tx = x\n        if (align === ALIGN_CENTER) \n          tx += (maxLineWidth-lineWidth)/2\n        else if (align === ALIGN_RIGHT)\n          tx += (maxLineWidth-lineWidth)\n\n        glyphs.push({\n          position: [tx, y],\n          data: glyph,\n          index: i,\n          line: lineIndex\n        })  \n\n        //move pen forward\n        x += glyph.xadvance + letterSpacing\n        lastGlyph = glyph\n      }\n    }\n\n    //next line down\n    y += lineHeight\n    x = 0\n  })\n  this._linesTotal = lines.length;\n}\n\nTextLayout.prototype._setupSpaceGlyphs = function(font) {\n  //These are fallbacks, when the font doesn't include\n  //' ' or '\\t' glyphs\n  this._fallbackSpaceGlyph = null\n  this._fallbackTabGlyph = null\n\n  if (!font.chars || font.chars.length === 0)\n    return\n\n  //try to get space glyph\n  //then fall back to the 'm' or 'w' glyphs\n  //then fall back to the first glyph available\n  var space = getGlyphById(font, SPACE_ID) \n          || getMGlyph(font) \n          || font.chars[0]\n\n  //and create a fallback for tab\n  var tabWidth = this._opt.tabSize * space.xadvance\n  this._fallbackSpaceGlyph = space\n  this._fallbackTabGlyph = xtend(space, {\n    x: 0, y: 0, xadvance: tabWidth, id: TAB_ID, \n    xoffset: 0, yoffset: 0, width: 0, height: 0\n  })\n}\n\nTextLayout.prototype.getGlyph = function(font, id) {\n  var glyph = getGlyphById(font, id)\n  if (glyph)\n    return glyph\n  else if (id === TAB_ID) \n    return this._fallbackTabGlyph\n  else if (id === SPACE_ID) \n    return this._fallbackSpaceGlyph\n  return null\n}\n\nTextLayout.prototype.computeMetrics = function(text, start, end, width) {\n  var letterSpacing = this._opt.letterSpacing || 0\n  var font = this._opt.font\n  var curPen = 0\n  var curWidth = 0\n  var count = 0\n  var glyph\n  var lastGlyph\n\n  if (!font.chars || font.chars.length === 0) {\n    return {\n      start: start,\n      end: start,\n      width: 0\n    }\n  }\n\n  end = Math.min(text.length, end)\n  for (var i=start; i < end; i++) {\n    var id = text.charCodeAt(i)\n    var glyph = this.getGlyph(font, id)\n\n    if (glyph) {\n      //move pen forward\n      var xoff = glyph.xoffset\n      var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0\n      curPen += kern\n\n      var nextPen = curPen + glyph.xadvance + letterSpacing\n      var nextWidth = curPen + glyph.width\n\n      //we've hit our limit; we can't move onto the next glyph\n      if (nextWidth >= width || nextPen >= width)\n        break\n\n      //otherwise continue along our line\n      curPen = nextPen\n      curWidth = nextWidth\n      lastGlyph = glyph\n    }\n    count++\n  }\n  \n  //make sure rightmost edge lines up with rendered glyphs\n  if (lastGlyph)\n    curWidth += lastGlyph.xoffset\n\n  return {\n    start: start,\n    end: start + count,\n    width: curWidth\n  }\n}\n\n//getters for the private vars\n;['width', 'height', \n  'descender', 'ascender',\n  'xHeight', 'baseline',\n  'capHeight',\n  'lineHeight' ].forEach(addGetter)\n\nfunction addGetter(name) {\n  Object.defineProperty(TextLayout.prototype, name, {\n    get: wrapper(name),\n    configurable: true\n  })\n}\n\n//create lookups for private vars\nfunction wrapper(name) {\n  return (new Function([\n    'return function '+name+'() {',\n    '  return this._'+name,\n    '}'\n  ].join('\\n')))()\n}\n\nfunction getGlyphById(font, id) {\n  if (!font.chars || font.chars.length === 0)\n    return null\n\n  var glyphIdx = findChar(font.chars, id)\n  if (glyphIdx >= 0)\n    return font.chars[glyphIdx]\n  return null\n}\n\nfunction getXHeight(font) {\n  for (var i=0; i<X_HEIGHTS.length; i++) {\n    var id = X_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getMGlyph(font) {\n  for (var i=0; i<M_WIDTHS.length; i++) {\n    var id = M_WIDTHS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx]\n  }\n  return 0\n}\n\nfunction getCapHeight(font) {\n  for (var i=0; i<CAP_HEIGHTS.length; i++) {\n    var id = CAP_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getKerning(font, left, right) {\n  if (!font.kernings || font.kernings.length === 0)\n    return 0\n\n  var table = font.kernings\n  for (var i=0; i<table.length; i++) {\n    var kern = table[i]\n    if (kern.first === left && kern.second === right)\n      return kern.amount\n  }\n  return 0\n}\n\nfunction getAlignType(align) {\n  if (align === 'center')\n    return ALIGN_CENTER\n  else if (align === 'right')\n    return ALIGN_RIGHT\n  return ALIGN_LEFT\n}\n\nfunction findChar (array, value, start) {\n  start = start || 0\n  for (var i = start; i < array.length; i++) {\n    if (array[i].id === value) {\n      return i\n    }\n  }\n  return -1\n}","var dtype = require('dtype')\nvar anArray = require('an-array')\nvar isBuffer = require('is-buffer')\n\nvar CW = [0, 2, 3]\nvar CCW = [2, 1, 3]\n\nmodule.exports = function createQuadElements(array, opt) {\n    //if user didn't specify an output array\n    if (!array || !(anArray(array) || isBuffer(array))) {\n        opt = array || {}\n        array = null\n    }\n\n    if (typeof opt === 'number') //backwards-compatible\n        opt = { count: opt }\n    else\n        opt = opt || {}\n\n    var type = typeof opt.type === 'string' ? opt.type : 'uint16'\n    var count = typeof opt.count === 'number' ? opt.count : 1\n    var start = (opt.start || 0) \n\n    var dir = opt.clockwise !== false ? CW : CCW,\n        a = dir[0], \n        b = dir[1],\n        c = dir[2]\n\n    var numIndices = count * 6\n\n    var indices = array || new (dtype(type))(numIndices)\n    for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n        var x = i + start\n        indices[x + 0] = j + 0\n        indices[x + 1] = j + 1\n        indices[x + 2] = j + 2\n        indices[x + 3] = j + a\n        indices[x + 4] = j + b\n        indices[x + 5] = j + c\n    }\n    return indices\n}","var newline = /\\n/\nvar newlineChar = '\\n'\nvar whitespace = /\\s/\n\nmodule.exports = function(text, opt) {\n    var lines = module.exports.lines(text, opt)\n    return lines.map(function(line) {\n        return text.substring(line.start, line.end)\n    }).join('\\n')\n}\n\nmodule.exports.lines = function wordwrap(text, opt) {\n    opt = opt||{}\n\n    //zero width results in nothing visible\n    if (opt.width === 0 && opt.mode !== 'nowrap') \n        return []\n\n    text = text||''\n    var width = typeof opt.width === 'number' ? opt.width : Number.MAX_VALUE\n    var start = Math.max(0, opt.start||0)\n    var end = typeof opt.end === 'number' ? opt.end : text.length\n    var mode = opt.mode\n\n    var measure = opt.measure || monospace\n    if (mode === 'pre')\n        return pre(measure, text, start, end, width)\n    else\n        return greedy(measure, text, start, end, width, mode)\n}\n\nfunction idxOf(text, chr, start, end) {\n    var idx = text.indexOf(chr, start)\n    if (idx === -1 || idx > end)\n        return end\n    return idx\n}\n\nfunction isWhitespace(chr) {\n    return whitespace.test(chr)\n}\n\nfunction pre(measure, text, start, end, width) {\n    var lines = []\n    var lineStart = start\n    for (var i=start; i<end && i<text.length; i++) {\n        var chr = text.charAt(i)\n        var isNewline = newline.test(chr)\n\n        //If we've reached a newline, then step down a line\n        //Or if we've reached the EOF\n        if (isNewline || i===end-1) {\n            var lineEnd = isNewline ? i : i+1\n            var measured = measure(text, lineStart, lineEnd, width)\n            lines.push(measured)\n            \n            lineStart = i+1\n        }\n    }\n    return lines\n}\n\nfunction greedy(measure, text, start, end, width, mode) {\n    //A greedy word wrapper based on LibGDX algorithm\n    //https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n    var lines = []\n\n    var testWidth = width\n    //if 'nowrap' is specified, we only wrap on newline chars\n    if (mode === 'nowrap')\n        testWidth = Number.MAX_VALUE\n\n    while (start < end && start < text.length) {\n        //get next newline position\n        var newLine = idxOf(text, newlineChar, start, end)\n\n        //eat whitespace at start of line\n        while (start < newLine) {\n            if (!isWhitespace( text.charAt(start) ))\n                break\n            start++\n        }\n\n        //determine visible # of glyphs for the available width\n        var measured = measure(text, start, newLine, testWidth)\n\n        var lineEnd = start + (measured.end-measured.start)\n        var nextStart = lineEnd + newlineChar.length\n\n        //if we had to cut the line before the next newline...\n        if (lineEnd < newLine) {\n            //find char to break on\n            while (lineEnd > start) {\n                if (isWhitespace(text.charAt(lineEnd)))\n                    break\n                lineEnd--\n            }\n            if (lineEnd === start) {\n                if (nextStart > start + newlineChar.length) nextStart--\n                lineEnd = nextStart // If no characters to break, show all.\n            } else {\n                nextStart = lineEnd\n                //eat whitespace at end of line\n                while (lineEnd > start) {\n                    if (!isWhitespace(text.charAt(lineEnd - newlineChar.length)))\n                        break\n                    lineEnd--\n                }\n            }\n        }\n        if (lineEnd >= start) {\n            var result = measure(text, start, lineEnd, testWidth)\n            lines.push(result)\n        }\n        start = nextStart\n    }\n    return lines\n}\n\n//determines the visible number of glyphs within a given width\nfunction monospace(text, start, end, width) {\n    var glyphs = Math.min(width, end-start)\n    return {\n        start: start,\n        end: start+glyphs\n    }\n}","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = three;","var createLayout = require('layout-bmfont-text')\nvar createIndices = require('quad-indices')\nimport * as utils from './utils';\nimport * as vertices from './vertices';\nimport * as THREE from 'three';\n\nexport function createTextGeometry (opt) {\n  return new TextGeometry(opt)\n}\n\nclass TextGeometry extends THREE.BufferGeometry {\n  constructor(opt){\n    super();\n\n    if (typeof opt === 'string') {\n      opt = { text: opt }\n    }\n  \n    // use these as default values for any subsequent\n    // calls to update()\n    this._opt = Object.assign({}, opt)\n  \n    // also do an initial setup...\n    if (opt) this.update(opt)\n  }\n\n  update(opt) {\n    if (typeof opt === 'string') {\n      opt = { text: opt }\n    }\n  \n    // use constructor defaults\n    opt = Object.assign({}, this._opt, opt)\n  \n    if (!opt.font) {\n      throw new TypeError('must specify a { font } in options')\n    }\n  \n    this.layout = createLayout(opt)\n  \n    // get vec2 texcoords\n    var flipY = opt.flipY !== false\n  \n    // the desired BMFont data\n    var font = opt.font\n  \n    // determine texture size from font file\n    var texWidth = font.common.scaleW\n    var texHeight = font.common.scaleH\n  \n    // get visible glyphs\n    var glyphs = this.layout.glyphs.filter(function (glyph) {\n      var bitmap = glyph.data\n      return bitmap.width * bitmap.height > 0\n    })\n  \n    // provide visible glyphs for convenience\n    this.visibleGlyphs = glyphs\n  \n    // get common vertex data\n    var positions = vertices.positions(glyphs)\n    var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY)\n    var indices = createIndices([], {\n      clockwise: true,\n      type: 'uint16',\n      count: glyphs.length\n    })\n  \n    // update vertex data\n    this.setIndex(indices)\n    this.setAttribute('position', new THREE.BufferAttribute(positions, 3))\n    this.setAttribute('uv', new THREE.BufferAttribute(uvs, 2))\n  \n    // update multipage data\n    if (!opt.multipage && 'page' in this.attributes) {\n      // disable multipage rendering\n      this.removeAttribute('page')\n    } else if (opt.multipage) {\n      // enable multipage rendering\n      var pages = vertices.pages(glyphs)\n      this.setAttribute('page', new THREE.BufferAttribute(pages, 1))\n    }\n  }\n  \n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new THREE.Sphere()\n    }\n  \n    var positions = this.attributes.position.array\n    var itemSize = this.attributes.position.itemSize\n    if (!positions || !itemSize || positions.length < 3) {\n      this.boundingSphere.radius = 0\n      this.boundingSphere.center.set(0, 0, 0)\n      return\n    }\n    utils.computeSphere(positions, this.boundingSphere)\n    if (isNaN(this.boundingSphere.radius)) {\n      console.error('THREE.BufferGeometry.computeBoundingSphere(): ' +\n        'Computed radius is NaN. The ' +\n        '\"position\" attribute is likely to have NaN values.')\n    }\n  }\n  \n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new THREE.Box3()\n    }\n  \n    var bbox = this.boundingBox\n    var positions = this.attributes.position.array\n    var itemSize = this.attributes.position.itemSize\n    if (!positions || !itemSize || positions.length < 3) {\n      bbox.makeEmpty()\n      return\n    }\n    utils.computeBox(positions, bbox)\n  }\n}\n"],"names":["str","Object","prototype","toString","module","exports","arr","BYTES_PER_ELEMENT","call","buffer","Array","isArray","num","def","dtype","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Uint8ClampedArray","isBuffer","obj","constructor","readFloatLE","slice","isSlowBuffer","_isBuffer","wordWrap","xtend","number","X_HEIGHTS","M_WIDTHS","CAP_HEIGHTS","TAB_ID","charCodeAt","SPACE_ID","TextLayout","opt","this","glyphs","_measure","computeMetrics","bind","update","wrapper","name","Function","join","getGlyphById","font","id","chars","length","glyphIdx","findChar","getKerning","left","right","kernings","table","i","kern","first","second","amount","array","value","start","measure","_opt","tabSize","Error","text","_setupSpaceGlyphs","lines","minWidth","width","maxLineWidth","reduce","prev","line","Math","max","x","y","lineHeight","common","baseline","base","descender","letterSpacing","height","align","getAlignType","_width","_height","_descender","_baseline","_xHeight","idx","getXHeight","_capHeight","getCapHeight","_lineHeight","_ascender","self","forEach","lineIndex","lastGlyph","end","lineWidth","glyph","getGlyph","tx","push","position","data","index","xadvance","_linesTotal","_fallbackSpaceGlyph","_fallbackTabGlyph","space","getMGlyph","tabWidth","xoffset","yoffset","curPen","curWidth","count","min","nextPen","nextWidth","defineProperty","get","configurable","anArray","CW","CCW","type","dir","clockwise","a","b","c","numIndices","indices","j","newline","newlineChar","whitespace","idxOf","chr","indexOf","isWhitespace","test","monospace","map","substring","mode","Number","MAX_VALUE","lineStart","charAt","isNewline","measured","pre","testWidth","newLine","lineEnd","nextStart","result","greedy","target","arguments","source","key","hasOwnProperty","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","three","require","THREE"],"sourceRoot":""}